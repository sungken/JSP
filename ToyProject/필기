
새프로젝트
- "ToyProject" + "toy"

1. 주제
	- 기본 업무 구현

2. 요구분석
	- 회원 관리
	- 게시판
	- 기타 등..

3. 페이지 구성(관계도)
	- 틈틈히..
	- draw.io
				
4. 화면 설계도
	- 생략

5. 스토리 보드
	- 생략
		
6. 데이터베이스
	- ERD

7. 스크립트
	- DDL, DML
	- 기초 데이터/더미 데이터
	- ToyProject > "script.sql"
				
8. 구현
	- 패키지
		- "com.test.toy": 메인 패키지
			- "Index.java": 시작
			- "Template.java": 템플릿
		- "com.test.toy.user": 회원
			- "Register.java": 회원가입폼 + 회원가입처리
			- "Unregister.java": 회원탈퇴폼 + 회원탈퇴처리
			- "Login.java": 로그인폼 + 로그인처리
			- "Logout.java": 로그아웃처리
			- "Info.java": 회원정보
		- "com.test.toy.user.repository": DB(DAO)
			- "UserDAO.java"
		- "com.test.toy.user.model": DB(DTO)
			- "UserDTO.java"
	- 페이지
		- "views"
			- "index.jsp"
			- "template.jsp"
		- views > "user"
					- "register.jsp"
					- "unregister.jsp"
					- "login.jsp"
					- "logout.jsp"
					- "info.jsp"
	- 공통 & 리소스 
		- views > "inc"
					- "asset.jsp"
					- "header.jsp"
		- webapp > "asset"
					> "css"
						- "main.css"
					> "js"
						- "main.js"
					> "images"
					> "pic"
					- "favicon.ico"
					
	- 라이브러리
		- lib
			- ojdbc.jar
			- util.jar
			- jstl.jar
			- cos.jar
			- lombok.jar
			- json-simple.jar
			
	- 패키지
		- "com.test.toy.board"
			- "List.java"
			- "View.java"
			- "Add.java"
			- "Edit.java"
			- "Del.java"
			- "Auth.java"
			- "Dummy.java"
		- "com.test.toy.board.repository"
			- "BoardDAO.java"
		- "com.test.toy.board.model"
			- "BoardDTO.java"
			- "CommentDTO.java"			
		- "com.test.toy.board.data"
			- "AddComment.java"
			- "DelComment.java"
			- "EditComment.java"
			- "MoreComment.java"
	- 페이지
		- views > "board"
					- "list.jsp"
					- "view.jsp"
					- "add.jsp"
					- "edit.jsp"
					- "del.jsp"
	- 패키지
		- "com.test.toy.filter"
			- "EncodingFilter.java"
			- "AuthFilter.java"


질의 패턴
- 매개변수 유/무
- 반환값 유/무 > 단일값, DTO, List<DTO>

queryNoParamNoReturn
queryParamNoReturn

queryNoParamTokenReturn
queryParamTokenReturn

queryNoParamDTOReturn
queryParamDTOReturn

queryNoParamListReturn
queryParamListReturn


게시판 정책
- CRUD
- 목록보기, 상세보기 > 미인증(O), 인증(O)
- 글쓰기, 수정하기, 삭제하기 > 미인증(X), 인증(O) > 방식 > 노출 제어
- 수정하기, 삭제하기 > 인증(O) > 본인만 가능
- 수정하기, 삭제하기 > 관리자(모든글에 가능)




게시판 검색




페이징



답변
- thread, depth > 값을 넣는 규칙

1. 새글 쓰기
	a. 현존하는 모든 게시물 중에서 가장 큰 thread 값을 찾아서 그 값에 +1000을 한 값을 새글의 thread 값으로 넣는다.
	b. 새글의 depth 값은 0을 넣는다.
	
2. 답변글 쓰기
	a. 현존하는 모든 게시물의 thread 값을 대상으로, 현재 작성 중인 답변글의 부모글 thread 값보다 작고, 이전 새글의 thread 값보다 큰 thread를 모두 찾아서 -1 을 한다.
	b. 답변글의 thread 값은 부모글의 thread - 1을 넣는다.
	c. 답변글의 depth 값은 부모글의 depth + 1을 넣는다.




	










		