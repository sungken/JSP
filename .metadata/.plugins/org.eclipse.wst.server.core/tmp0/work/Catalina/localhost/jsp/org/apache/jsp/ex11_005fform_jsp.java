/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-04-02 02:08:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex11_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"http://pinnpublic.dothome.co.kr/cdn/example-min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- ex11_form.jsp -->\r\n");
      out.write("	<h1>폼 관련 입력 태그</h1>\r\n");
      out.write("\r\n");
      out.write("	<!-- 폼태그는 거의 99% POST로 쓴다.*** -->\r\n");
      out.write("	<form method=\"POST\" action=\"ex11_ok.jsp\">\r\n");
      out.write("		<table class=\"vartical\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>텍스트 박스</th>\r\n");
      out.write("				<td><input type=\"text\" name=\"txt1\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>암호 박스</th>\r\n");
      out.write("				<td><input type=\"password\" name=\"txt2\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>멀티 텍스트</th>\r\n");
      out.write("				<td><textarea rows=\"5\" cols=\"30\" name=\"txt3\"></textarea></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>체크 박스</th>\r\n");
      out.write("				<td><input type=\"checkbox\" name=\"cb1\" value=\"java\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>체크 박스 들</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<h3>취미를 선택하세요.(복수 선택 가능)</h3> <label><input type=\"checkbox\"\r\n");
      out.write("						name=\"cb2\" value=\"독서\">독서</label> <label><input\r\n");
      out.write("						type=\"checkbox\" name=\"cb3\" value=\"운동\">운동</label> <label><input\r\n");
      out.write("						type=\"checkbox\" name=\"cb4\" value=\"코딩\">코딩</label>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>체크 박스 들2</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<h3>취미를 선택하세요.(복수 선택 가능)</h3> <label><input type=\"checkbox\"\r\n");
      out.write("						name=\"cb5\" value=\"독서\">독서</label> <label><input\r\n");
      out.write("						type=\"checkbox\" name=\"cb5\" value=\"운동\">운동</label> <label><input\r\n");
      out.write("						type=\"checkbox\" name=\"cb5\" value=\"코딩\">코딩</label> <!-- name=\"cb5\" 로 한번에 넘겨 버리기 -->\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>라디오 버튼</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<h3>성별을 선택하시오.</h3> <label><input type=\"radio\" name=\"rb\"\r\n");
      out.write("						value=\"male\"> 남자</label> <label><input type=\"radio\"\r\n");
      out.write("						name=\"rb\" value=\"female\"> 여자</label>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>셀렉트 박스</th>\r\n");
      out.write("				<td><select name=\"sel1\">\r\n");
      out.write("						<option value=\"1\">사과</option>\r\n");
      out.write("						<option value=\"2\">귤</option>\r\n");
      out.write("						<option value=\"3\">바나나</option>\r\n");
      out.write("				</select></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>셀렉트 박스2</th>\r\n");
      out.write("				<td><select name=\"sel2\" multiple=\"multiple\">\r\n");
      out.write("						<option value=\"1\">사과</option>\r\n");
      out.write("						<option value=\"2\">귤</option>\r\n");
      out.write("						<option value=\"3\">바나나</option>\r\n");
      out.write("				</select></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>히든 태그</th>\r\n");
      out.write("				<td><input type=\"hidden\" name=\"id\" value=\"hong\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>날짜</th>\r\n");
      out.write("				<td><input type=\"date\" name=\"regdate\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>색상</th>\r\n");
      out.write("				<td><input type=\"color\" name=\"color\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>사용자 정의 컨트롤</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<img alt=\"\" src=\"images/catty01.png\" id=\"cat1\" >\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		<div>\r\n");
      out.write("			<input type=\"submit\" value=\"보내기\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<input type=\"hidden\" name=\"left\">\r\n");
      out.write("		<input type=\"hidden\" name=\"top\">\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("	<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		$('#cat1').draggable({\r\n");
      out.write("			stop: function(event, ui) {\r\n");
      out.write("				//alert(ui.position.left);\r\n");
      out.write("				//alert(ui.position.top);\r\n");
      out.write("				\r\n");
      out.write("				$('input[name=left]').val(ui.position.left);\r\n");
      out.write("				$('input[name=top]').val(ui.position.top);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
