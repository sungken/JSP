프로젝트 생성
- New > Dynamic Web Project
  > Project name: "JSPTest"
  > Target runtime: Tomcat v8.5
  > module: 3.1
  > Context Root: "jsp"
  > web.xml 체크(O)
  

Hello~
- webapp > "ex01.jsp"  

  
JSP 구성 요소

1. JSP 지시자, JSP Directive
	- <%@ %>
	- page 지시자 	
	- include 지시자  	
	- taglib 지시자

2. 스크립트 요소, Scripting Elements
	- <% %>
	- 스크립틀릿 	
	- 익스프레션 	
	- 선언부

3. 액션 태그, Action Tags
	- <jsp:XXX>, <c:XXX>
	- 기본 액션 태그	
	- 확장 액션 태그	
	- 사용자 정의 액션 태그
	
page 지시자

- "ex03.jsp"
- jsp 페이지 실행 환경 설정 > 톰캣에게 알려준다.
- jsp 페이지에 항상 첫줄에 작성
- 1개 이상 작성 가능

	<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
    a. language="java"
    - JSP 페이지에서 사용할 프로그래밍 언어 지정
    
    b. contentType="text/html; charset=UTF-8"
    - JSP 페이지의 콘텐츠에 대한 기술
    - text/html: MIME 타입 > HTML문서 > 브라우저에게 전달
    - charset=UTF-8 > HTML문서 > 브라우저에게 전달(없으면 한글 깨짐)
    
    c. pageEncoding="UTF-8"
    	- 현재 JSP 페이지의 인코딩
    	


include 지시자
- "ex04.jsp"
- "login.jsp"

- <%@ include file="URL" %>
- 특정 JSP 페이지(HTML, Text 등)를 현재 JSP 페이지의 일부분으로 삽입하는 기술
- 조각 페이지





스크립틀릿 + 익스프레션

스크립틀릿, Scriptlet
- <% %>
- Script + Applet
- HTML 영역에서 Java 문법을 사용 가능하게 하는 영역을 제공
- 비즈니스 코드 작성

익스프레션, Expression
- <%= %>
- 자바의 값을 HTML 문서(***)에 출력하는 역할
- 브라우저 화면에 출력하는게 아니다(***)
- System.out.println() 역할

- "ex05_script.jsp"
- "ex06_script.jsp"




선언부, Declaration
- <%! %>
- 멤버 변수와 멤버 메소드를 선언하는 영역
- ex01.jsp
- ex08.jsp




JSP 실행 순서
1. ex01.jsp > (변환) > ex01.java(서블릿)
2. ex02.java 컴파일 > ex01.class
3. ex01.class 실행 > doGet 호출
4. 임시 페이지
5. 반환

JSP 내장 객체, JSP Implicit Object
- 개발자가 직접 생성하지 않아도, 톰캣이 미리 만들어서 제공하는 객체
- 예약어로 제공

- request, response, session, pageContext (중요도: 최상*****)
- out, application (중요도: 하)
- config, page, exception (중요도: 최하)
 
***** pageContext, request, session, application
	- 객체 내부에 사용자 데이터를 저장할 수 있는 컬렉션(Map)을 가지고 있다.
	- void setAttribute(String key, Object value)
	- Object getAttribute(String key)

request
- HttpServeltRequest
- 서블릿의 doGet/doPost의 첫번째 매개변수
- 주로 클라이언트 측에서 서버측으로 발생하는 모든 업무를 관여한다.

1. 클라이언트에서 서버로 전송한 데이터를 가져오기
	- ex10_form.jsp : 사용자 입력을 받는 페이지(ex03_Send.java)
	- ex10_ok.jsp : 전송된 데이터를 수신하는 페이지(ex03_Receive.java)
	
	- ex11_form.jsp
	- ex11_ok.jsp

2. 클라이언트에서 서버로 전송한 데이터의 인코딩 처리

3. 클라이언트 에서 서버로 전송할 때의 정보를 가져오기

- "ex09_request.jsp"


response
- HttpServletResponse
- 서블릿의 doGet/doPost의 두번째 매개변수
- 주로 서버측에서 클라이언트측으로 발생하는 모든 업무를 관여한다.

1. 돌려줄 HTML 페이지 제작
	- response.getWriter() > PrintWriter > HTML 제작
	- 서블릿 > 작성O
	- JSP > 암시적

2. 돌려줄 HTML 페이지 인코딩 설정
	- response.setCharacterEncoding("UTF-8");
	- 서블릿 > 작성O
	- JSP > 페이지 지시자 > contentType="text/html; charset=UTF-8"

3. 돌려줄 HTML 페이지 MIME 설정
	- contentType="text/html"
	- 파일 업로드 수업 때 진행

4. 페이지 이동하기
	- "ex14_response_1.jsp"
	- "ex14_response_2.jsp"


pageContext
	- "ex15_pagecontext_1.jsp"
	- "ex15_pagecontext_2.jsp"


내장 객체의 생명 주기
- pageContext, request(response), session, application


- pageContext: 생성(페이지 요청) ~ 소멸(페이지 반환)

- request: 생성(페이지 요청) ~ 소멸(페이지 반환)
		   생성(페이지 요청) ~ 페이지 이동(Forward) ~소멸(페이지 반환)
		   
- session: 생성(첫 방문) ~ 소멸(최종 접속 후 30분 뒤)

- application: 생성(첫번째 사용자 접속) ~ 소멸(마지막 사용자 세션 소멸)



out
- 출력 객체
- JSP 방식이 아닌 Servlet 방식의 출력을 지원한다.
- "ex16_out.jsp"


session & application ***
- session > 개인 정보 관리 객체 > ex) 객체 변수
- application > 사이트 정보 관리 객체 > ex) 정적 변수

- "ex17_session.jsp"

- "ex18_session.jsp" //메인 페이지
- "ex18_set.jsp"
- "ex18_del.jsp"
- "ex18_interval.jsp"
- "ex18_reset.jsp"



*** 웹은 비연결성을 가진다.(Connectionless)
 - 브라우저와 서버는 페이지 요청 시에만 연결이 되고, 페이지 응답을 마치면 둘간의 연결을 종료한다.
 
 
 -------------------------


파일 업로드/다운로드

단일 파일 업로드
- "ex19_form.jsp"
- "ex19_ok.jsp"

다중 파일 업로드
- "ex20_form.jsp"
- "ex20_ok.jsp"

이미지 뷰어
- "ex21.jsp"
- "ex21_ok.jsp"
- "ex21_del.jsp"

톰캣 8.5 > JDK ~ 1.8

JDK 11 




  
  



























